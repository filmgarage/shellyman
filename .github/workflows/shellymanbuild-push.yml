name: Build & Push Shellyman Add-on (tagged releases)

on:
  push:
    tags:
      - 'v*.*.*'   # build only on semantic-like tags, e.g., v0.2.2 or v0.2.2-alpha
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      fail-fast: false
      matrix:
        arch: [ amd64, aarch64 ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Derive version/tag and images
        id: meta
        env:
          ARCH: ${{ matrix.arch }}
        shell: bash
        run: |
          # Extract raw ref name (e.g., v0.2.1-alpha)
          RAW="${GITHUB_REF##*/}"
          # Strip leading 'v' (optional) and any accidental leading dot
          VER="${RAW#v}"
          VER="${VER#.}"
          # Basic sanitization: allow [A-Za-z0-9_.-]
          if [[ ! "$VER" =~ ^[A-Za-z0-9_.-]+$ ]]; then
            echo "Invalid version string after parsing: '$VER'"
            exit 1
          fi
          if [ -z "$VER" ]; then
            echo "Version string empty after parsing"
            exit 1
          fi
          echo "Using version: $VER"
          IMAGE="ghcr.io/filmgarage/${ARCH}-addon-shellyman:${VER}"
          IMAGE_LATEST="ghcr.io/filmgarage/${ARCH}-addon-shellyman:latest"
          echo "IMAGE=$IMAGE" >> $GITHUB_OUTPUT
          echo "IMAGE_LATEST=$IMAGE_LATEST" >> $GITHUB_OUTPUT

      - name: Build & Push (${{ matrix.arch }})
        uses: docker/build-push-action@v6
        with:
          context: ./shellyman
          file: ./shellyman/Dockerfile
          platforms: linux/${{ matrix.arch }}
          push: true
          tags: |
            ${{ steps.meta.outputs.IMAGE }}
            ${{ steps.meta.outputs.IMAGE_LATEST }}
          cache-from: type=registry,ref=ghcr.io/filmgarage/cache-shellyman:${{ matrix.arch }}
          cache-to: type=registry,ref=ghcr.io/filmgarage/cache-shellyman:${{ matrix.arch }},mode=max

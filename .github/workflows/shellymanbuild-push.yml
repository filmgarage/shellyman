name: Build & Push Shellyman Add-on (tagged releases)

on:
  push:
    tags:
      - 'v*.*.*'   # build only on tags (e.g., v0.2.3 or v0.2.3-alpha)
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      fail-fast: false
      matrix:
        arch: [ amd64, aarch64 ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Derive version/tag and images
        id: meta
        env:
          ARCH: ${{ matrix.arch }}
        shell: bash
        run: |
          RAW="${GITHUB_REF##*/}"       # e.g. v0.2.3-alpha
          VER="${RAW#v}"                # 0.2.3-alpha
          VER="${VER#.}"                # guard stray leading dot
          if [[ -z "$VER" ]]; then echo "Empty version"; exit 1; fi
          if [[ ! "$VER" =~ ^[A-Za-z0-9_.-]+$ ]]; then echo "Bad version: $VER"; exit 1; fi
          IMAGE="ghcr.io/filmgarage/${ARCH}-addon-shellyman:${VER}"
          IMAGE_LATEST="ghcr.io/filmgarage/${ARCH}-addon-shellyman:latest"
          echo "VER=$VER" >> $GITHUB_OUTPUT
          echo "IMAGE=$IMAGE" >> $GITHUB_OUTPUT
          echo "IMAGE_LATEST=$IMAGE_LATEST" >> $GITHUB_OUTPUT
          
      - name: Debug build context
        run: ls -R ./shellyman
        
      - name: Build & Push (${{ matrix.arch }})
        uses: docker/build-push-action@v6
        with:
          context: ./shellyman
          file: ./shellyman/Dockerfile
          platforms: linux/${{ matrix.arch }}
          push: true
          build-args: |
            BUILD_FROM=ghcr.io/home-assistant/${{ matrix.arch }}-base:latest
          tags: |
            ${{ steps.meta.outputs.IMAGE }}
            ${{ steps.meta.outputs.IMAGE_LATEST }}
          cache-from: type=registry,ref=ghcr.io/filmgarage/cache-shellyman:${{ matrix.arch }}
          cache-to: type=registry,ref=ghcr.io/filmgarage/cache-shellyman:${{ matrix.arch }},mode=max
